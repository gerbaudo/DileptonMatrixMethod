Index: ../SusyNtuple/Root/SusyNtTools.cxx
===================================================================
--- ../SusyNtuple/Root/SusyNtTools.cxx	(revision 332956)
+++ ../SusyNtuple/Root/SusyNtTools.cxx	(working copy)
@@ -1,4 +1,5 @@
 #include <set>
+#include <algorithm> // min
 
 #include "TFile.h"
 #include "TChainElement.h"
@@ -542,22 +543,27 @@
 
   // Relative ptcone iso
   if(m_doPtconeCut){ // true by default
     float ptcone30 = elPtConeCorr(ele, baseElectrons, baseMuons, nVtx, isMC, removeLepsFromIso);
-    if(ptcone30/pt >= ELECTRON_PTCONE30_PT_CUT) return false;
+    //if(ptcone30/pt >= ELECTRON_PTCONE30_PT_CUT) return false;
+    if(pt==0.0 || ptcone30/std::min(pt, 60.0) >= 0.07) return false;
   }
 
   // Topo etcone isolation cut
   if(m_doElEtconeCut){ // true by default
     float etcone = elEtTopoConeCorr(ele, baseElectrons, baseMuons, nVtx, isMC, removeLepsFromIso);
-    if(etcone/pt >= ELECTRON_TOPOCONE30_PT_CUT) return false;
+    //if(etcone/pt >= ELECTRON_TOPOCONE30_PT_CUT) return false;
+    if(pt==0.0 || etcone/std::min(pt, 60.0) >= 0.13) return false;
   }
 
   return true;
@@ -585,7 +591,9 @@
     }
     else{
       float ptcone30 = mu->ptcone30ElStyle; // no corrections at the moment
-      if(ptcone30/mu->Pt() >= MUON_PTCONE30ELSTYLE_PT_CUT) return false;
+      //if(ptcone30/mu->Pt() >= MUON_PTCONE30ELSTYLE_PT_CUT) return false;
+      if(pt==0.0 || ptcone30/std::min(pt, 60.0) >= 0.06) return false;
     }
   }
 
@@ -593,7 +601,12 @@
   if(m_doMuEtconeCut){ // FALSE by default
     float etcone30 = muEtConeCorr(mu, baseElectrons, baseMuons, nVtx, isMC, removeLepsFromIso);
     if(m_doMuEtconeCut && etcone30/mu->Pt() >= MUON_ETCONE30_PT_CUT) return false;
-  }
+  } else if(m_anaType == Ana_2LepWH) {
+    float etcone30 = muEtConeCorr(mu, baseElectrons, baseMuons, nVtx, isMC, removeLepsFromIso);
+    if(pt==0.0 || etcone30/std::min(pt, 60.0) >= 0.14) return false;     
+ }
 
   return true;
 }
